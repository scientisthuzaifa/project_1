@model Aptech_Final_E_project.Context.contestDB

@{
    Layout = null;
}
<!-- Latest compiled and minified CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">

<!-- Latest compiled JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
<style>
    /* Custom CSS for the card */
    .card {
        background-color: #f8f9fa; /* Light gray background */
        border: 4px solid #ced4da; /* Increase border width */
        padding: 20px; /* Add some padding for spacing */
        max-width: 600px; /* Limit card width */
        margin: 0 auto; /* Center the card horizontally */
        text-align: left; /* Left-align card content */
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1); /* Add a subtle shadow */
    }

    /* Style the form labels */
    .control-label {
        font-weight: bold;
    }

    /* Style the submit button */
    .btn-primary {
        background-color: #3498db; /* Blue background */
        color: #fff; /* White text color */
        border: none; /* Remove border */
    }

    /* Style the Back to List button */
    .btn-secondary {
        background-color: #ccc; /* Light gray background */
        color: #000; /* Black text color */
        border: none; /* Remove border */
    }
</style>

<h2 class="text-center">Create Contest</h2>
@if (Session["IsFormActivated"] != null && (bool)Session["IsFormActivated"])
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Contest</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Ingradient, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Ingradient, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ingradient, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CookingProcess, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CookingProcess, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CookingProcess, "", new { @class = "text-danger" })
                </div>
               
                <div class="form-group text-center">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>


            </div>
        </div>
    }
}
else
{
    <p class="no-form-msg">No form available at the moment.</p>
}
