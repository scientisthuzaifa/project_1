@model Aptech_Final_E_project.Context.Recipes

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    /* Custom CSS for the card */
    .card {
      
        background-color: #f8f9fa; /* Light gray background */
        border: 4px solid #ced4da; /* Increase border width */
        padding: 20px; /* Add some padding for spacing */
        max-width: 600px; /* Limit card width */
        margin: 0 auto; /* Center the card horizontally */
        text-align: left; /* Left-align card content */
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1); /* Add a subtle shadow */
    }

    /* Style the form labels */
    .control-label {
        font-weight: bold;
    }

    /* Style the submit button */
    .btn-primary {
        background-color: #3498db; /* Blue background */
        color: #fff; /* White text color */
        border: none; /* Remove border */
    }

    /* Style the Back to List button */
    .btn-secondary {
        background-color: #ccc; /* Light gray background */
        color: #000; /* Black text color */
        border: none; /* Remove border */
    }
</style>

<h2 class="text-center">Create Recipe</h2>

@using (Html.BeginForm("Create", "Recipes", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Recipe Details</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Ingredients, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Ingredients, new { @class = "form-control", rows = 4 })
                @Html.ValidationMessageFor(model => model.Ingredients, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CookingProcess, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.CookingProcess, new { @class = "form-control", rows = 6 })
                @Html.ValidationMessageFor(model => model.CookingProcess, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Isfree, htmlAttributes: new { @class = "control-label" })
                <div class="radio">
                    @Html.RadioButtonFor(model => model.Isfree, true) Yes
                    @Html.RadioButtonFor(model => model.Isfree, false) No
                </div>
                @Html.ValidationMessageFor(model => model.Isfree, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label" })
                <input type="file" name="ImageFiles" class="form-control" />
            </div>

            <div class="form-group text-center">
                <input type="submit" value="Create" class="btn btn-secondary" />
            </div>
        </div>
    </div>
}


